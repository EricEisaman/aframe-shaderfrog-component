{"version":3,"file":"aframe-shaderfrog-component.js","sources":["../../src/main.js"],"sourcesContent":["import {version} from './modules/version';\n\nvar shaders = {};\nimport Polkadot_Shader from './shaders/Polkadot_Shader.json';\nshaders['Polkadot_Shader']=Polkadot_Shader;\nimport Sun_Shader from './shaders/Sun_Shader.json';\nshaders['Sun_Shader']=Sun_Shader;\nimport Jelly_Shader from './shaders/Jelly_Shader.json';\nshaders['Jelly_Shader']=Jelly_Shader;\nimport Green_Dance_Shader from './shaders/Green_Dance_Shader.json';\nshaders['Green_Dance_Shader']=Green_Dance_Shader;\nimport Cosmic_Shader from './shaders/Cosmic_Shader.json';\nshaders['Cosmic_Shader']=Cosmic_Shader;\nimport Cool_Tiles_Shader from './shaders/Cool_Tiles_Shader.json';\nshaders['Cool_Tiles_Shader']=Cool_Tiles_Shader;\nimport Disco_Shader from './shaders/Disco_Shader.json';\nshaders['Disco_Shader']=Disco_Shader;\nimport Marching_Ants_Shader from './shaders/Marching_Ants_Shader.json';\nshaders['Marching_Ants_Shader']=Marching_Ants_Shader;\nimport Goo_Shader from './shaders/Goo_Shader.json';\nshaders['Goo_Shader']=Goo_Shader;\nimport Psycho_Shader from './shaders/Psycho_Shader.json';\nshaders['Psycho_Shader']=Psycho_Shader;\nimport Ova_Shader from './shaders/Ova_Shader.json';\nshaders['Ova_Shader']=Ova_Shader;\nimport Thruster_Shader from './shaders/Thruster_Shader.json';\nshaders['Thruster_Shader']=Thruster_Shader;\nimport Flowing_Circles_Shader from './shaders/Flowing_Circles_Shader.json';\nshaders['Flowing_Circles_Shader']=Flowing_Circles_Shader;\nimport Electric_Shader from './shaders/Electric_Shader.json';\nshaders['Electric_Shader']=Electric_Shader;\nimport CS1_Shader from './shaders/CS1_Shader.json';\nshaders['CS1_Shader']=CS1_Shader;\n\nAFRAME.shaderfrog = shaders;\n\nvar defaultThreeUniforms = [\n    'normalMatrix', 'viewMatrix', 'projectionMatrix', 'position', 'normal',\n    'modelViewMatrix', 'uv', 'uv2', 'modelMatrix'\n];\n\nfunction ShaderRuntime() {}\n\nShaderRuntime.prototype = {\n\n    mainCamera: null,\n    cubeCameras: {},\n\n    reserved: { time: null, cameraPosition: null },\n\n    umap: {\n        float: { type: 'f', value: 0 },\n        int: { type: 'i', value: 0 },\n        vec2: { type: 'v2', value() { return new THREE.Vector2(); } },\n        vec3: { type: 'v3', value() { return new THREE.Vector3(); } },\n        vec4: { type: 'v4', value() { return new THREE.Vector4(); } },\n        samplerCube: { type: 't' },\n        sampler2D: { type: 't' }\n    },\n\n    getUmap( type ) {\n        let value = this.umap[ type ].value;\n        return typeof value === 'function' ? value() : value;\n    },\n\n    registerCamera( camera ) {\n\n        if( !( camera instanceof THREE.Camera ) ) {\n            throw new Error( 'Cannot register a non-camera as a camera!' );\n        }\n\n        this.mainCamera = camera;\n\n    },\n\n    registerCubeCamera( name, camera ) {\n\n        if( !camera.renderTarget ) {\n            throw new Error( 'Cannot register a non-camera as a camera!' );\n        }\n\n        this.cubeCameras[ name ] = camera;\n\n    },\n\n    unregisterCamera( name ) {\n\n        if( name in this.cubeCameras ) {\n\n            delete this.cubeCameras[ name ];\n            \n        } else if( name === this.mainCamera ) {\n\n            delete this.mainCamera;\n\n        } else {\n\n            throw new Error( 'You never registered camera ' + name );\n\n        }\n\n    },\n\n    updateSource( identifier, config, findBy ) {\n\n        findBy = findBy || 'name';\n\n        if( !this.shaderTypes[ identifier ] ) {\n            throw new Error( 'Runtime Error: Cannot update shader ' + identifier + ' because it has not been added.' );\n        }\n\n        let newShaderData = this.add( identifier, config ),\n            shader, x;\n\n        for( x = 0; shader = this.runningShaders[ x++ ]; ) {\n            if( shader[ findBy ] === identifier ) {\n                extend( shader.material, omit( newShaderData, 'id' ) );\n                shader.material.needsUpdate = true;\n            }\n        }\n\n    },\n\n    renameShader( oldName, newName ) {\n\n        let x, shader;\n\n        if( !( oldName in this.shaderTypes ) ) {\n            throw new Error('Could not rename shader ' + oldName + ' to ' + newName + '. It does not exist.');\n        }\n\n        this.shaderTypes[ newName ] = this.shaderTypes[ oldName ];\n        delete this.shaderTypes[ oldName ];\n\n        for( x = 0; shader = this.runningShaders[ x++ ]; ) {\n            if( shader.name === oldName ) {\n                shader.name = newName;\n            }\n        }\n\n    },\n\n    get( identifier ) {\n\n        let shaderType = this.shaderTypes[ identifier ];\n\n        if( !shaderType.initted ) {\n\n            this.create( identifier );\n        }\n\n        return shaderType.material;\n\n    },\n\n    add( shaderName, config ) {\n\n        let newData = clone( config ),\n            uniform;\n        newData.fragmentShader = config.fragment;\n        newData.vertexShader = config.vertex;\n        delete newData.fragment;\n        delete newData.vertex;\n\n        for( var uniformName in newData.uniforms ) {\n            uniform = newData.uniforms[ uniformName ];\n            if( uniform.value === null ) {\n                newData.uniforms[ uniformName ].value = this.getUmap( uniform.glslType );\n            }\n        }\n        \n        if( shaderName in this.shaderTypes ) {\n            // maybe not needed? too sleepy, need document\n            extend( this.shaderTypes[ shaderName ], newData );\n        } else {\n            this.shaderTypes[ shaderName ] = newData;\n        }\n\n        return newData;\n\n    },\n\n    create( identifier ) {\n\n        let shaderType = this.shaderTypes[ identifier ];\n      \n        delete shaderType.id;\n\n        shaderType.material = new THREE.RawShaderMaterial( shaderType );\n\n        this.runningShaders.push( shaderType );\n\n        shaderType.init && shaderType.init( shaderType.material );\n        shaderType.material.needsUpdate = true;\n\n        shaderType.initted = true;\n\n        return shaderType.material;\n\n    },\n\n    updateRuntime( identifier, data, findBy ) {\n\n        findBy = findBy || 'name';\n\n        let shader, x, uniformName, uniform;\n\n        // This loop does not appear to be a slowdown culprit\n        for( x = 0; shader = this.runningShaders[ x++ ]; ) {\n            if( shader[ findBy ] === identifier ) {\n                for( uniformName in data.uniforms ) {\n\n                    if( uniformName in this.reserved ) {\n                        continue;\n                    }\n\n                    if( uniformName in shader.material.uniforms ) {\n\n                        uniform = data.uniforms[ uniformName ];\n\n                        // this is nasty, since the shader serializes\n                        // CubeCamera model to string. Maybe not update it at\n                        // all?\n                        if( uniform.type === 't' && typeof uniform.value === 'string' ) {\n                            uniform.value = this.cubeCameras[ uniform.value ].renderTarget;\n                        }\n\n                        shader.material.uniforms[ uniformName ].value = data.uniforms[ uniformName ].value;\n                    }\n                }\n            }\n        }\n\n    },\n\n    // Update global shader uniform values\n    updateShaders( time, obj ) {\n\n        let shader, x;\n\n        obj = obj || {};\n\n        for( x = 0; shader = this.runningShaders[ x++ ]; ) {\n\n            for( let uniform in obj.uniforms ) {\n                if( uniform in shader.material.uniforms ) {\n                    shader.material.uniforms[ uniform ].value = obj.uniforms[ uniform ];\n                }\n            }\n\n            if( 'cameraPosition' in shader.material.uniforms && this.mainCamera ) {\n\n                shader.material.uniforms.cameraPosition.value = this.mainCamera.position.clone();\n\n            }\n\n            if( 'viewMatrix' in shader.material.uniforms && this.mainCamera ) {\n\n                shader.material.uniforms.viewMatrix.value = this.mainCamera.matrixWorldInverse;\n\n            }\n\n            if( 'time' in shader.material.uniforms ) {\n\n                shader.material.uniforms.time.value = time;\n\n            }\n\n        }\n\n    },\n\n    shaderTypes: shaders,\n\n    runningShaders: []\n\n};\n\n// Convenience methods so we don't have to include underscore\nfunction extend() {\n    let length = arguments.length,\n        obj = arguments[ 0 ];\n\n    if( length < 2 ) {\n        return obj;\n    }\n\n    for( let index = 1; index < length; index++ ) {\n        let source = arguments[ index ],\n            keys = Object.keys( source || {} ),\n            l = keys.length;\n        for( let i = 0; i < l; i++ ) {\n            let key = keys[i];\n            obj[ key ] = source[ key ];\n        }\n    }\n\n    return obj;\n}\n\nfunction clone( obj ) {\n    return extend( {}, obj );\n}\n\nfunction omit( obj, ...keys ) {\n    let cloned = clone( obj ), x, key;\n    for( x = 0; key = keys[ x++ ]; ) {\n        delete cloned[ key ];\n    }\n    return cloned;\n}\n  \nAFRAME.registerSystem('shader-frog', {\n  init:function(){\n    this.frog_runtime = new ShaderRuntime();\n    this.clock = new THREE.Clock();\n    var self = this;\n        \n    var scene = document.querySelector('a-scene');\n    if (scene.hasLoaded) {\n      registerCamera().bind(this);;\n    } else {\n      scene.addEventListener('loaded', registerCamera);\n    }\n    function registerCamera () {\n       var camera = document.querySelector(\"a-scene\").systems[\"camera\"];\n       if(camera && camera.sceneEl && camera.sceneEl.camera){\n         camera = camera.sceneEl.camera;\n         self.frog_runtime.registerCamera(camera);\n       }\n    }\n  },\n  tick: function (t) {\n    this.frog_runtime.updateShaders( this.clock.getElapsedTime() );\n  }\n});\nAFRAME.registerComponent('shader-frog',{\n  schema:{\n    name:{type:\"string\" , default:\"Flowing_Circles_Shader\"}\n  },\n  init: function(){\n    this.originalMaterial = this.el.getObject3D('mesh').material;\n    this.shaderData = shaders[this.data.name];\n  },\n  update: function(){\n    this.system.frog_runtime.add(this.data.name,this.shaderData);\n    var material = this.system.frog_runtime.get(this.data.name);\n    this.el.getObject3D('mesh').material = material;\n  },\n  remove: function(){\n    this.el.getObject3D('mesh').material = this.originalMaterial;\n  }\n});\n  \n\n\n "],"names":[],"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"}